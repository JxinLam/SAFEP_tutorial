#############################################################
## JOB DESCRIPTION                                         ##
#############################################################

#############################################################
## GENERAL SETTINGS                                        ##
#############################################################
# NPT ensemble (flag for later scripting, not part of vanilla NAMD)
set NPT	1

# Continuing a job from the restart files
set continuing	0 	;
if {$continuing} {
	set inputname      [your inputname here]
}

source ../../common/common_config.namd

#############################################################
## ADJUSTABLE PARAMETERS                                   ##
#############################################################
set useSampleFiles	1

structure          ../../common/structures/phenol_lysozyme.psf
if {$useSampleFiles} {
	coordinates        ../sample_outputs/alchemy_site.pdb
} else {
	coordinates        ../outputs/alchemy_site.pdb
}

outputName         ../outputs/alchemy_site

#############################################################
## SIMULATION PARAMETERS                                   ##
#############################################################

# Periodic Boundary Conditions
# NOTE: Do not set the periodic cell basis if you have also 
# specified an .xsc restart file!
if {!$continuing} { 
	cellBasisVector1    50.    0.   0.
	cellBasisVector2     0.   50.   0.
	cellBasisVector3     0.    0.  70.
	cellOrigin           0     0    0
}

# Integrator Parameters
timestep                2.0  ;# 2fs/step
fullElectFrequency      2
nonbondedFreq           1

restartfreq           50000
dcdfreq               5000
xstFreq               5000
outputEnergies        5000
outputPressure        5000

#############################################################
## COLVARS                                                 ##
#############################################################

colvars                on 
if {$useSampleFiles} {
	colvarsConfig          ../../stepA_create_DBC/sample_outputs/DBC_restraint.colvars
} else {
	colvarsConfig          ../../stepA_create_DBC/outputs/DBC_restraint.colvars
}
cv configfile ../../common/protein_tilt.colvars

#############################################################
## EXECUTION SCRIPT                                        ##
#############################################################

# FEP PARAMETERS
source                  ../../common/fep.tcl

alch                    on
alchType                FEP

if {$useSampleFiles} {
	alchFile       ../sample_outputs/alchemy_site.pdb
} else {
	alchFile       ../outputs/alchemy_site.pdb
}

alchCol                 B                    ;# Decoupling flags are in the beta field
alchOutFreq             50                   ;# Number of steps between writing FEP data. These will be further downsampled in a later step.
alchOutFile             ../outputs/alchemy_site.fepout  ;# File to write the FEP data.
alchElecLambdaStart     0.5                  ;# Start (de)coupling electrostatics. Rarely changed. See NAMD UG. 
alchVdwLambdaEnd        1.0                  ;# Stop (de)coupling VdW. See NAMD UG
alchVdwShiftCoeff       5.0                  ;# The softcore potential coefficient. Typically between 5 and 10.
alchdecouple            on                

set lambdaStart 		0.0
set lambdaEnd 			1.0
set dLambda             0.05            ;# The width of each lambda window (0.05 will result in 20 lambda windows and (20+1)*nSteps total simulation time)
set IDWS 				true 			;# Use interleaved double-wide sampling

alchLambda 				0
alchLambda2				$dLambda
alchEquilSteps          1            ;# Waits N steps before collecting FEP data for each window. We'll trim equilibration during analysis.

set numSteps            500000           ;# Run 1ns for the first window
if {!$continuing} {
	minimize				1000
	reinitvels $temperature
}
runFEP $lambdaStart $dLambda $dLambda $numSteps $IDWS ;# Extra long equilibration for the first window

set numSteps            250000           ;# 0.5ns per lambda (0.5 ns * 20 lambdas + 1ns * 1 lambda = 11ns)
runFEP  $lambdaStart $lambdaEnd $dLambda $numSteps $IDWS     ;# Invokes the runFEP script. See [Supp-Files]/common/fep.tcl for more details.

